name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

jobs:
  auth-service:
    name: Auth service
    timeout-minutes: 15
    runs-on: ubuntu-latest
    outputs:
      auth-service-function-name: ${{ steps.release.outputs.auth-service-function-name }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Cache turbo build setup
        uses: actions/cache@v3
        with:
          path: .dist
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Pulumi
        uses: pulumi/actions@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
#
#      - name: Show folder structure
#        run: find . -not -path '*node_modules*'

      - name: Install dependencies
        run: yarn

      - name: Get AWS Role
        run: |
          export PULUMI_CONFIG_PASSPHRASE=
          pl stack select boot
          AWS_ROLE_ARN=$(pulumi stack output ghActionsRoleArn)
          echo "AWS_ROLE_ARN=${AWS_ROLE_ARN}" >> "$GITHUB_ENV"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: ${AWS_ROLE_ARN}
          role-session-name: AuthSession

      - name: Release
        id: release
        run: |
          BRANCH=$GITHUB_HEAD_REF yarn deploy --filter=auth-service-infra
          export PULUMI_CONFIG_PASSPHRASE=
          AUTH_SERVICE_FUNCTION_NAME=$(pulumi stack output someRandomOutput --cwd ./services/auth/infra)
          echo "auth-service-function-name=$AUTH_SERVICE_FUNCTION_NAME" >> "$GITHUB_OUTPUT"

    #      - name: Test
    #        run: yarn test


  web-app:
    name: Web app
    needs:
      - auth-service
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Cache turbo build setup
        uses: actions/cache@v3
        with:
          path: .open-next
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Get AWS Role
        run: |
          export PULUMI_CONFIG_PASSPHRASE=
          pl stack select boot
          AWS_ROLE_ARN=$(pulumi stack output ghActionsRoleArn)
          echo "AWS_ROLE_ARN=${AWS_ROLE_ARN}" >> "$GITHUB_ENV"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: ${AWS_ROLE_ARN}
          role-session-name: DocsSession

      - name: Release
        env:
          WWW_ARTIFACTS: ${{needs.auth-service.outputs.auth-service-function-name}}
        run: yarn deploy --filter=docs

#      - name: Test
#        run: yarn test